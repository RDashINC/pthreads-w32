/* This is an implementation of the threads API of POSIX 1003.1-2001.
*
* --------------------------------------------------------------------------
*
*      Pthreads-win32 - POSIX Threads Library for Win32
*      Copyright(C) 1998 John E. Bossom
*      Copyright(C) 1999,2005 Pthreads-win32 contributors
*
*      Contact Email: rpj@callisto.canberra.edu.au
*
*      The current list of contributors is contained
*      in the file CONTRIBUTORS included with the source
*      code distribution. The list can also be seen at the
*      following World Wide Web location:
*      http://sources.redhat.com/pthreads-win32/contributors.html
*
*      This library is free software; you can redistribute it and/or
*      modify it under the terms of the GNU Lesser General Public
*      License as published by the Free Software Foundation; either
*      version 2 of the License, or (at your option) any later version.
*
*      This library is distributed in the hope that it will be useful,
*      but WITHOUT ANY WARRANTY; without even the implied warranty of
*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*      Lesser General Public License for more details.
*
*      You should have received a copy of the GNU Lesser General Public
*      License along with this library in the file COPYING.LIB;
*      if not, write to the Free Software Foundation, Inc.,
*      59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
*/

#include <winver.h>
#include "pthread.h"

/*
* Note: the correct __CLEANUP_* macro must be defined corresponding to
* the definition used for the object file builds. This is done in the
* relevent makefiles for the command line builds, but users should ensure
* that their resource compiler knows what it is too.
* If using the default (no __CLEANUP_* defined), pthread.h will define it
* as __CLEANUP_C.
*/

#if defined(__MINGW64__)
#  define PTW32_ARCH "x64 (mingw64)"
#elif defined (__MINGW32__)
#  define PTW32_ARCH "x86 (mingw32)"
#endif
#if defined(PTW32_ARCHx64)
#  define PTW32_ARCH "x64"
#elif defined(PTW32_ARCHx86)
#  define PTW32_ARCH "x86"
#endif

#if defined(PTW32_RC_MSC)
#  if defined(__CLEANUP_C)
#    define PTW32_VERSIONINFO_NAME "pthreadVC2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "MS C " PTW32_ARCH "\0"
#  elif defined(__CLEANUP_CXX)
#    define PTW32_VERSIONINFO_NAME "pthreadVCE2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "MS C++ " PTW32_ARCH "\0"
#  elif defined(__CLEANUP_SEH)
#    define PTW32_VERSIONINFO_NAME "pthreadVSE2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "MS C SEH " PTW32_ARCH "\0"
#  else
#    error Resource compiler doesn't know which cleanup style you're using - see version.rc
#  endif
#elif defined(__GNUC__)
#  if defined(__CLEANUP_C)
#    define PTW32_VERSIONINFO_NAME "pthreadGC2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "GNU C " PTW32_ARCH "\0"
#  elif defined(__CLEANUP_CXX)
#    define PTW32_VERSIONINFO_NAME "pthreadGCE2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "GNU C++ " PTW32_ARCH "\0"
#  else
#    error Resource compiler doesn't know which cleanup style you're using - see version.rc
#  endif
#elif defined(__BORLANDC__)
#  if defined(__CLEANUP_C)
#    define PTW32_VERSIONINFO_NAME "pthreadBC2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "BORLAND C " PTW32_ARCH "\0"
#  elif defined(__CLEANUP_CXX)
#    define PTW32_VERSIONINFO_NAME "pthreadBCE2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "BORLAND C++ " PTW32_ARCH "\0"
#  else
#    error Resource compiler doesn't know which cleanup style you're using - see version.rc
#  endif
#elif defined(__WATCOMC__)
#  if defined(__CLEANUP_C)
#    define PTW32_VERSIONINFO_NAME "pthreadWC2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "WATCOM C " PTW32_ARCH "\0"
#  elif defined(__CLEANUP_CXX)
#    define PTW32_VERSIONINFO_NAME "pthreadWCE2.DLL\0"
#    define PTW32_VERSIONINFO_DESCRIPTION "WATCOM C++ " PTW32_ARCH "\0"
#  else
#    error Resource compiler doesn't know which cleanup style you're using - see version.rc
#  endif
#else
#  error Resource compiler doesn't know which compiler you're using - see version.rc
#endif
